
#define INSTRUCTIONS \
    IR_INSTRUCTION_DEF(BAD, ""), \
    IR_INSTRUCTION_DEF(E_ADD, ""), \
    IR_INSTRUCTION_DEF(E_SUB, ""), \
    IR_INSTRUCTION_DEF(E_MUL, ""), \
    IR_INSTRUCTION_DEF(E_DIV, ""), \
    IR_INSTRUCTION_DEF(E_MOD, ""), \
    IR_INSTRUCTION_DEF(E_SHL, ""), \
    IR_INSTRUCTION_DEF(E_SHR, ""), \
    IR_INSTRUCTION_DEF(E_AND, ""), \
    IR_INSTRUCTION_DEF(E_OR, ""), \
    IR_INSTRUCTION_DEF(E_XOR, ""), \
    IR_INSTRUCTION_DEF(E_CMP, ""), \
    IR_INSTRUCTION_DEF(E_FADD, ""), \
    IR_INSTRUCTION_DEF(E_FSUB, ""), \
    IR_INSTRUCTION_DEF(E_FMUL, ""), \
    IR_INSTRUCTION_DEF(E_FDIV, ""), \
    IR_INSTRUCTION_DEF(E_FMOD, ""), \
    IR_INSTRUCTION_DEF(E_FCMP, ""), \
    IR_INSTRUCTION_DEF(E_EQ, ""), \
    IR_INSTRUCTION_DEF(E_NE, ""), \
    IR_INSTRUCTION_DEF(E_LT, ""), \
    IR_INSTRUCTION_DEF(E_LE, ""), \
    IR_INSTRUCTION_DEF(E_GT, ""), \
    IR_INSTRUCTION_DEF(E_GE, ""), \
    IR_INSTRUCTION_DEF(E_FEQ, ""), \
    IR_INSTRUCTION_DEF(E_FNE, ""), \
    IR_INSTRUCTION_DEF(E_FLT, ""), \
    IR_INSTRUCTION_DEF(E_FLE, ""), \
    IR_INSTRUCTION_DEF(E_FGT, ""), \
    IR_INSTRUCTION_DEF(E_FGE, ""), \
    IR_INSTRUCTION_DEF(U_NOT, ""), \
    IR_INSTRUCTION_DEF(U_BNOT, ""), \
    IR_INSTRUCTION_DEF(E_BITCAST, ""), \
    IR_INSTRUCTION_DEF(MOVE, ""), \
    IR_INSTRUCTION_DEF(M_LOAD, "base, offset"), \
    IR_INSTRUCTION_DEF(M_STORE, "base, offset, value"), \
    IR_INSTRUCTION_DEF(BLOCK_PTR, ""), \
    IR_INSTRUCTION_DEF(BRANCH, ""), \
    IR_INSTRUCTION_DEF(CBRANCH, "condition branch"), \
    IR_INSTRUCTION_DEF(IBRANCH, ""), \
    IR_INSTRUCTION_DEF(TBRANCH, "table branch (switches)"), \
    IR_INSTRUCTION_DEF(RET, ""), \
    IR_INSTRUCTION_DEF(CALL, ""), \
    IR_INSTRUCTION_DEF(ICALL, ""), \
	IR_INSTRUCTION_DEF(ALLOCA, "allocate stack slots"), \
	IR_INSTRUCTION_DEF(CFG_LABEL, "create a label to basic block"), \
	IR_INSTRUCTION_DEF(DEF_CONST, "define const"), \
	IR_INSTRUCTION_DEF(GET_ELEMENT_PTR, "get element pointer (aka GEP)"), \
	IR_INSTRUCTION_DEF(M_COPY, "copies from src to dst n bytes"), \
	IR_INSTRUCTION_DEF(P_REG, "physical register"), \
    IR_INSTRUCTION_DEF(PHI, "")


