FILE test/testData/parser/negative/expressions/assignOp.c
  signed int i
----
  float f
----
  *signed int pi
----
  *float pf
----
  signed int[20] arr
----
  STRUCT S
    signed int good #0
  STRUCT_END
----
  STRUCT S s
----
  *STRUCT S ps
----
  FUN void testAsg 
  BEGIN
    i = i
    i = (signed int)f
    i = (signed int)pi
    i = (signed int)pf
    i = (signed int)arr
    i = s
    i = (signed int)ps
    f = (float)i
    f = f
    f = pi
    f = pf
    f = arr
    f = s
    f = ps
    pi = (*signed int)i
    pi = f
    pi = pi
    pi = (*signed int)pf
    pi = (*signed int)arr
    pi = s
    pi = (*signed int)ps
    pf = (*float)i
    pf = f
    pf = (*float)pi
    pf = pf
    pf = (*float)arr
    pf = s
    pf = (*float)ps
    arr = i
    arr = f
    arr = pi
    arr = pf
    arr = arr
    arr = s
    arr = ps
    s = i
    s = f
    s = pi
    s = pf
    s = arr
    s = s
    s = ps
    ps = (*STRUCT S)i
    ps = f
    ps = (*STRUCT S)pi
    ps = (*STRUCT S)pf
    ps = (*STRUCT S)arr
    ps = s
    ps = ps    
  END
----
  FUN void testPlusAsg 
  BEGIN
    i = i + i
    i = (signed int)((float)i + f)
    i = (signed int)(i * 4 + pi)
    i = (signed int)(i * 4 + pf)
    i = (signed int)(i * 4 + arr)
    i = i + s
    i = (signed int)(i * 8 + ps)
    f = f + (float)i
    f = f + f
    f = f + pi
    f = f + pf
    f = f + arr
    f = f + s
    f = f + ps
    pi = pi + i * 4
    pi = pi + f
    pi = pi + pi
    pi = pi + pf
    pi = pi + arr
    pi = pi + s
    pi = pi + ps
    pf = pf + i * 4
    pf = pf + f
    pf = pf + pi
    pf = pf + pf
    pf = pf + arr
    pf = pf + s
    pf = pf + ps
    arr = arr + i * 4
    arr = arr + f
    arr = arr + pi
    arr = arr + pf
    arr = arr + arr
    arr = arr + s
    arr = arr + ps
    s = s + i
    s = s + f
    s = s + pi
    s = s + pf
    s = s + arr
    s = s + s
    s = s + ps
    ps = ps + i * 8
    ps = ps + f
    ps = ps + pi
    ps = ps + pf
    ps = ps + arr
    ps = ps + s
    ps = ps + ps    
  END
----
  FUN void testMinusAsg 
  BEGIN
    i = i - i
    i = (signed int)((float)i - f)
    i = i - pi
    i = i - pf
    i = i - arr
    i = i - s
    i = i - ps
    f = f - (float)i
    f = f - f
    f = f - pi
    f = f - pf
    f = f - arr
    f = f - s
    f = f - ps
    pi = pi - i * 4
    pi = pi - f
    pi = (*signed int)((pi - pi) / 4)
    pi = pi - pf
    pi = (*signed int)((pi - arr) / 4)
    pi = pi - s
    pi = pi - ps
    pf = pf - i * 4
    pf = pf - f
    pf = pf - pi
    pf = (*float)((pf - pf) / 4)
    pf = pf - arr
    pf = pf - s
    pf = pf - ps
    arr = arr - i * 4
    arr = arr - f
    arr = (arr - pi) / 4
    arr = arr - pf
    arr = (arr - arr) / 4
    arr = arr - s
    arr = arr - ps
    s = s - i
    s = s - f
    s = s - pi
    s = s - pf
    s = s - arr
    s = s - s
    s = s - ps
    ps = ps - i * 8
    ps = ps - f
    ps = ps - pi
    ps = ps - pf
    ps = ps - arr
    ps = ps - s
    ps = (*STRUCT S)((ps - ps) / 8)    
  END
----
  FUN void testMulAsg 
  BEGIN
    i = i * i
    i = (signed int)((float)i * f)
    i = i * pi
    i = i * pf
    i = i * arr
    i = i * s
    i = i * ps
    f = f * (float)i
    f = f * f
    f = f * pi
    f = f * pf
    f = f * arr
    f = f * s
    f = f * ps
    pi = pi * i
    pi = pi * f
    pi = pi * pi
    pi = pi * pf
    pi = pi * arr
    pi = pi * s
    pi = pi * ps
    pf = pf * i
    pf = pf * f
    pf = pf * pi
    pf = pf * pf
    pf = pf * arr
    pf = pf * s
    pf = pf * ps
    arr = arr * i
    arr = arr * f
    arr = arr * pi
    arr = arr * pf
    arr = arr * arr
    arr = arr * s
    arr = arr * ps
    s = s * i
    s = s * f
    s = s * pi
    s = s * pf
    s = s * arr
    s = s * s
    s = s * ps
    ps = ps * i
    ps = ps * f
    ps = ps * pi
    ps = ps * pf
    ps = ps * arr
    ps = ps * s
    ps = ps * ps    
  END
----
  FUN void testDivAsg 
  BEGIN
    i = i / i
    i = (signed int)((float)i / f)
    i = i / pi
    i = i / pf
    i = i / arr
    i = i / s
    i = i / ps
    f = f / (float)i
    f = f / f
    f = f / pi
    f = f / pf
    f = f / arr
    f = f / s
    f = f / ps
    pi = pi / i
    pi = pi / f
    pi = pi / pi
    pi = pi / pf
    pi = pi / arr
    pi = pi / s
    pi = pi / ps
    pf = pf / i
    pf = pf / f
    pf = pf / pi
    pf = pf / pf
    pf = pf / arr
    pf = pf / s
    pf = pf / ps
    arr = arr / i
    arr = arr / f
    arr = arr / pi
    arr = arr / pf
    arr = arr / arr
    arr = arr / s
    arr = arr / ps
    s = s / i
    s = s / f
    s = s / pi
    s = s / pf
    s = s / arr
    s = s / s
    s = s / ps
    ps = ps / i
    ps = ps / f
    ps = ps / pi
    ps = ps / pf
    ps = ps / arr
    ps = ps / s
    ps = ps / ps    
  END
----
  FUN void testModAsg 
  BEGIN
    i = i % i
    i = (signed int)((float)i % f)
    i = i % pi
    i = i % pf
    i = i % arr
    i = i % s
    i = i % ps
    f = f % (float)i
    f = f % f
    f = f % pi
    f = f % pf
    f = f % arr
    f = f % s
    f = f % ps
    pi = pi % i
    pi = pi % f
    pi = pi % pi
    pi = pi % pf
    pi = pi % arr
    pi = pi % s
    pi = pi % ps
    pf = pf % i
    pf = pf % f
    pf = pf % pi
    pf = pf % pf
    pf = pf % arr
    pf = pf % s
    pf = pf % ps
    arr = arr % i
    arr = arr % f
    arr = arr % pi
    arr = arr % pf
    arr = arr % arr
    arr = arr % s
    arr = arr % ps
    s = s % i
    s = s % f
    s = s % pi
    s = s % pf
    s = s % arr
    s = s % s
    s = s % ps
    ps = ps % i
    ps = ps % f
    ps = ps % pi
    ps = ps % pf
    ps = ps % arr
    ps = ps % s
    ps = ps % ps    
  END
----
  FUN void testLhsAsg 
  BEGIN
    i = i << i
    i = i << f
    i = i << pi
    i = i << pf
    i = i << arr
    i = i << s
    i = i << ps
    f = f << i
    f = f << f
    f = f << pi
    f = f << pf
    f = f << arr
    f = f << s
    f = f << ps
    pi = pi << i
    pi = pi << f
    pi = pi << pi
    pi = pi << pf
    pi = pi << arr
    pi = pi << s
    pi = pi << ps
    pf = pf << i
    pf = pf << f
    pf = pf << pi
    pf = pf << pf
    pf = pf << arr
    pf = pf << s
    pf = pf << ps
    arr = arr << i
    arr = arr << f
    arr = arr << pi
    arr = arr << pf
    arr = arr << arr
    arr = arr << s
    arr = arr << ps
    s = s << i
    s = s << f
    s = s << pi
    s = s << pf
    s = s << arr
    s = s << s
    s = s << ps
    ps = ps << i
    ps = ps << f
    ps = ps << pi
    ps = ps << pf
    ps = ps << arr
    ps = ps << s
    ps = ps << ps    
  END
----
  FUN void testRhsAsg 
  BEGIN
    i = i >> i
    i = i >> f
    i = i >> pi
    i = i >> pf
    i = i >> arr
    i = i >> s
    i = i >> ps
    f = f >> i
    f = f >> f
    f = f >> pi
    f = f >> pf
    f = f >> arr
    f = f >> s
    f = f >> ps
    pi = pi >> i
    pi = pi >> f
    pi = pi >> pi
    pi = pi >> pf
    pi = pi >> arr
    pi = pi >> s
    pi = pi >> ps
    pf = pf >> i
    pf = pf >> f
    pf = pf >> pi
    pf = pf >> pf
    pf = pf >> arr
    pf = pf >> s
    pf = pf >> ps
    arr = arr >> i
    arr = arr >> f
    arr = arr >> pi
    arr = arr >> pf
    arr = arr >> arr
    arr = arr >> s
    arr = arr >> ps
    s = s >> i
    s = s >> f
    s = s >> pi
    s = s >> pf
    s = s >> arr
    s = s >> s
    s = s >> ps
    ps = ps >> i
    ps = ps >> f
    ps = ps >> pi
    ps = ps >> pf
    ps = ps >> arr
    ps = ps >> s
    ps = ps >> ps    
  END
----
  FUN void testAndAsg 
  BEGIN
    i = i & i
    i = i & f
    i = i & pi
    i = i & pf
    i = i & arr
    i = i & s
    i = i & ps
    f = f & i
    f = f & f
    f = f & pi
    f = f & pf
    f = f & arr
    f = f & s
    f = f & ps
    pi = pi & i
    pi = pi & f
    pi = pi & pi
    pi = pi & pf
    pi = pi & arr
    pi = pi & s
    pi = pi & ps
    pf = pf & i
    pf = pf & f
    pf = pf & pi
    pf = pf & pf
    pf = pf & arr
    pf = pf & s
    pf = pf & ps
    arr = arr & i
    arr = arr & f
    arr = arr & pi
    arr = arr & pf
    arr = arr & arr
    arr = arr & s
    arr = arr & ps
    s = s & i
    s = s & f
    s = s & pi
    s = s & pf
    s = s & arr
    s = s & s
    s = s & ps
    ps = ps & i
    ps = ps & f
    ps = ps & pi
    ps = ps & pf
    ps = ps & arr
    ps = ps & s
    ps = ps & ps    
  END
----
  FUN void testOrAsg 
  BEGIN
    i = i | i
    i = i | f
    i = i | pi
    i = i | pf
    i = i | arr
    i = i | s
    i = i | ps
    f = f | i
    f = f | f
    f = f | pi
    f = f | pf
    f = f | arr
    f = f | s
    f = f | ps
    pi = pi | i
    pi = pi | f
    pi = pi | pi
    pi = pi | pf
    pi = pi | arr
    pi = pi | s
    pi = pi | ps
    pf = pf | i
    pf = pf | f
    pf = pf | pi
    pf = pf | pf
    pf = pf | arr
    pf = pf | s
    pf = pf | ps
    arr = arr | i
    arr = arr | f
    arr = arr | pi
    arr = arr | pf
    arr = arr | arr
    arr = arr | s
    arr = arr | ps
    s = s | i
    s = s | f
    s = s | pi
    s = s | pf
    s = s | arr
    s = s | s
    s = s | ps
    ps = ps | i
    ps = ps | f
    ps = ps | pi
    ps = ps | pf
    ps = ps | arr
    ps = ps | s
    ps = ps | ps    
  END
----
  FUN void testXorAsg 
  BEGIN
    i = i ^ i
    i = i ^ f
    i = i ^ pi
    i = i ^ pf
    i = i ^ arr
    i = i ^ s
    i = i ^ ps
    f = f ^ i
    f = f ^ f
    f = f ^ pi
    f = f ^ pf
    f = f ^ arr
    f = f ^ s
    f = f ^ ps
    pi = pi ^ i
    pi = pi ^ f
    pi = pi ^ pi
    pi = pi ^ pf
    pi = pi ^ arr
    pi = pi ^ s
    pi = pi ^ ps
    pf = pf ^ i
    pf = pf ^ f
    pf = pf ^ pi
    pf = pf ^ pf
    pf = pf ^ arr
    pf = pf ^ s
    pf = pf ^ ps
    arr = arr ^ i
    arr = arr ^ f
    arr = arr ^ pi
    arr = arr ^ pf
    arr = arr ^ arr
    arr = arr ^ s
    arr = arr ^ ps
    s = s ^ i
    s = s ^ f
    s = s ^ pi
    s = s ^ pf
    s = s ^ arr
    s = s ^ s
    s = s ^ ps
    ps = ps ^ i
    ps = ps ^ f
    ps = ps ^ pi
    ps = ps ^ pf
    ps = ps ^ arr
    ps = ps ^ s
    ps = ps ^ ps    
  END