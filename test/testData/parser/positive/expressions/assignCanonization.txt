FILE test/testData/parser/positive/expressions/assignCanonization.c
  STRUCT S1
    signed int x #0
    signed int a #4
    signed int[20] arr #8
  STRUCT_END
----
  STRUCT S2
    STRUCT S1[10] as #0
  STRUCT_END
----
  FUN void testStructValue 
    #0: signed int i
  BEGIN
    STRUCT S1 s1
    s1.a += 10
    s1.a += s1.a
    s1.arr[i++] -= 20
    s1.arr[s1.a] *= s1.a
    STRUCT S2 s2
    s2.as[i++].a += 30
    s2.as[i++].a += s2.as[s1.a].a
    s2.as[i++].arr[i++] -= 40
    s2.as[s1.a].arr[i++] *= s2.as[i].arr[s2.as[s1.a].a]    
  END
----
  FUN void testStructPtr 
    #0: *STRUCT S1 s1
    #1: *STRUCT S2 s2
    #2: signed int i
  BEGIN
    s1->a += 10
    s1->a += s1->a
    s1->arr[i++] -= 20
    s1->arr[s1->a] *= s1->a
    s2->as[i++].a += 30
    s2->as[i++].a += s2->as[s1->a].a
    s2->as[i++].arr[i++] -= 40
    s2->as[s1->a].arr[i++] *= s2->as[i].arr[s2->as[s1->a].a]    
  END
----
  STRUCT S3
    double d #0
    unsigned int:0:10 f1 #8
    unsigned int:10:15 f2 #8
  STRUCT_END
----
  STRUCT S4
    STRUCT S3[10] as3 #0
  STRUCT_END
----
  FUN void testStructBitField 
    #0: *STRUCT S4 s4
    #1: signed int x
  BEGIN
    s4->as3[x++].f1 = (unsigned int)10
    s4->as3[x++].f2 = s4->as3[x -= 1].f1
  END
----
  FUN void testArrayAsgn 
    #0: *signed int ptr
    #1: signed int i
  BEGIN
    ptr[i++] += 10
    ptr[10] += i -= 1
  END
