FILE test/testData/parser/positive/expressions/arithCanon.c
  FUN signed int testInt 
  BEGIN
    signed int x = \
      10
    signed int y = \
      30
    signed int z = \
      50
    signed int a = \
      *x + 5
    signed int b = \
      *x
    signed int c = \
      -*x
    signed int d = \
      *x
    signed int e = \
      *x
    signed int f = \
      *x * 2
    signed int h = \
      *x
    signed int i = \
      *x
    signed int j = \
      5 / *x
    signed int k = \
      *x / 5
    signed int r = \
      *x
    signed int s = \
      *x
    signed int aa = \
      *x + 12
    signed int bb = \
      *x - -2
    signed int cc = \
      *x + -2
    signed int dd = \
      *x - 12
    signed int ee = \
      *x * 35
    signed int ff = \
      *x / 5 * 7
    signed int gg = \
      *x * 5 / 7
    signed int hh = \
      *x / 35
    signed int ii = \
      *x % 5
    signed int jj = \
      *x % 5
    signed int aaa = \
      *x + *y + 5
    signed int bbb = \
      *x - *y + 5
    signed int ccc = \
      *x + *y - 5
    signed int ddd = \
      *x - *y - 5
    signed int eee = \
      *x * 5 * *y
    signed int fff = \
      *x * 5 / *y
    signed int ggg = \
      *x / 5 * *y
    signed int hhh = \
      *x / 5 / *y    
  END
----
  FUN signed int testFloat 
  BEGIN
    float x = \
      10.000000
    float y = \
      30.000000
    float z = \
      50.000000
    float a = \
      5.000000 + *x
    float b = \
      0.000000 + *x
    float c = \
      0.000000 - *x
    float d = \
      *x + 0.000000
    float e = \
      *x - 0.000000
    float f = \
      2.000000 * *x
    float h = \
      1.000000 * *x
    float i = \
      *x * 1.000000
    float j = \
      5.000000 / *x
    float k = \
      *x / 5.000000
    float r = \
      1.000000 / *x
    float s = \
      *x / 1.000000
    float aa = \
      *x + 5.000000 + 7.000000
    float bb = \
      *x - 5.000000 + 7.000000
    float cc = \
      *x + 5.000000 - 7.000000
    float dd = \
      *x - 5.000000 - 7.000000
    float ee = \
      *x * 5.000000 * 7.000000
    float ff = \
      *x / 5.000000 * 7.000000
    float gg = \
      *x * 5.000000 / 7.000000
    float hh = \
      *x / 5.000000 / 7.000000
    float aaa = \
      *x + 5.000000 + *y
    float bbb = \
      *x + 5.000000 - *y
    float ccc = \
      *x - 5.000000 + *y
    float ddd = \
      *x - 5.000000 - *y
    float eee = \
      *x * 5.000000 * *y
    float fff = \
      *x * 5.000000 / *y
    float ggg = \
      *x / 5.000000 * *y
    float hhh = \
      *x / 5.000000 / *y    
  END
----
  FUN void testShift 
  BEGIN
    signed int a = \
      10
    signed int b = \
      20
    signed long c = \
      30
    signed int d = \
      (signed int)(*a >> *b + *c)
    signed int e = \
      (signed int)(*a << *b >> *c)
    signed int f = \
      (signed int)(*a >> *b << *c)
    signed int g = \
      (signed int)(*a << *b + *c)
    signed int h = \
      (signed int)(*c >> *b + 10)
    signed int i = \
      (signed int)(*c << *b >> 10)
    signed int j = \
      (signed int)(*c >> *b << 10)
    signed int k = \
      (signed int)(*c << *b + 10)
    signed int l = \
      (signed int)(*c >> *c + 12)
    signed int m = \
      (signed int)(*c << 12 >> *c)
    signed int n = \
      (signed int)(*c >> 12 << *c)
    signed int o = \
      (signed int)(*c << *c + 12)
    signed int p = \
      *a >> 12
    signed int q = \
      *a << 7 >> 5
    signed int r = \
      *a >> 7 << 5
    signed int s = \
      *a << 12    
  END